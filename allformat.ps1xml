<?xml version="1.0" encoding="utf-8"?>
<Configuration>
  <ViewDefinitions>
    <View>
      <Name>children</Name>
      <ViewSelectedBy>
        <TypeName>System.IO.DirectoryInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Mode</Label>
            <Width>7</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LastWriteTime</Label>
            <Width>25</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Length</Label>
            <Width>14</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Mode</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                                    [String]::Format('{0,10}  {1,8}', $_.LastWriteTime.ToString('d'), $_.LastWriteTime.ToString('t'))
                                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Length</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                                    Terminal-Icons\Format-TerminalIcons $_
                                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>children</Name>
      <ViewSelectedBy>
        <TypeName>System.IO.DirectoryInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <ScriptBlock>
                                    Terminal-Icons\Format-TerminalIcons $_
                                </ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>CreationTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastWriteTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastAccessTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Mode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LinkType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Target</Label>
                <ScriptBlock>
                                Terminal-Icons\Format-TerminalIcons $_
                                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>System.IO.FileInfo</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <ScriptBlock>
                                    Terminal-Icons\Format-TerminalIcons $_
                                </ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>Length</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CreationTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastWriteTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastAccessTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Mode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LinkType</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Target</Label>
                <ScriptBlock>
                                    Terminal-Icons\Format-TerminalIcons $_
                                </ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>children</Name>
      <ViewSelectedBy>
        <TypeName>System.IO.DirectoryInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <ScriptBlock>
                                Terminal-Icons\Format-TerminalIcons $_
                            </ScriptBlock>
            </WideItem>
          </WideEntry>
          <WideEntry>
            <EntrySelectedBy>
              <TypeName>System.IO.DirectoryInfo</TypeName>
            </EntrySelectedBy>
            <WideItem>
              <ScriptBlock>
                                Terminal-Icons\Format-TerminalIcons $_
                            </ScriptBlock>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>children</Name>
      <ViewSelectedBy>
        <TypeName>System.IO.DirectoryInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Mode</Label>
            <Width>7</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LastWriteTime</Label>
            <Width>26</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Length</Label>
            <Width>14</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ModeWithoutHardLink</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LastWriteTimeString</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LengthString</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NameString</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>childrenWithHardlink</Name>
      <ViewSelectedBy>
        <TypeName>System.IO.DirectoryInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Mode</Label>
            <Width>7</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LastWriteTime</Label>
            <Width>26</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Length</Label>
            <Width>14</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Mode</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LastWriteTimeString</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LengthString</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NameString</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>children</Name>
      <ViewSelectedBy>
        <TypeName>System.IO.DirectoryInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CreationTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastWriteTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastAccessTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Mode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LinkType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Target</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>System.IO.FileInfo</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Length</Label>
                <PropertyName>LengthString</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CreationTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastWriteTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LastAccessTime</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Mode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LinkType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Target</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>VersionInfo</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>children</Name>
      <ViewSelectedBy>
        <TypeName>System.IO.DirectoryInfo</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <PropertyName>Name</PropertyName>
            </WideItem>
          </WideEntry>
          <WideEntry>
            <EntrySelectedBy>
              <TypeName>System.IO.DirectoryInfo</TypeName>
            </EntrySelectedBy>
            <WideItem>
              <PropertyName>Name</PropertyName>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>ThumbprintTable</Name>
      <ViewSelectedBy>
        <TypeName>System.Security.Cryptography.X509Certificates.X509Certificate2</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>41</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>EnhancedKeyUsageList</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Thumbprint</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Subject</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.EnhancedKeyUsageList.FriendlyName</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>ThumbprintList</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.X509StoreLocation</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Subject</Label>
                <ScriptBlock>$_.SubjectName.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Issuer</Label>
                <ScriptBlock>$_.IssuerName.Name</ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>Thumbprint</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>FriendlyName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>NotBefore</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>NotAfter</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Extensions</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>Microsoft.PowerShell.Commands.X509StoreLocation</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>StoreNames</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>System.Security.Cryptography.X509Certificates.X509Store</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>ThumbprintWide</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.X509StoreLocation</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <PropertyName>Thumbprint</PropertyName>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>PathOnly</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.X509StoreLocation</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>PSPath</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>Microsoft.PowerShell.Commands.X509StoreLocation</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>PSPath</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>System.Security.Cryptography.X509Certificates.X509Store</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>PSPath</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>PSThumbprintTable</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.Signature</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <ScriptBlock>split-path $_.Path</ScriptBlock>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SignerCertificate</Label>
            <Width>41</Width>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader />
          <TableColumnHeader>
            <Label>Path</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.SignerCertificate.Thumbprint</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>StatusMessage</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>split-path $_.Path -leaf</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>PSThumbprintWide</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.Signature</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <ScriptBlock>split-path $_.Path</ScriptBlock>
      </GroupBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <ScriptBlock>"$(split-path $_.Path -leaf): $($_.Status)"</ScriptBlock>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>System.Security.Cryptography.X509Certificates.X509CertificateEx</Name>
      <ViewSelectedBy>
        <TypeName>System.Security.Cryptography.X509Certificates.X509CertificateEx</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>41</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Thumbprint</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Subject</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.CodeDom.Compiler.CompilerError</Name>
      <ViewSelectedBy>
        <TypeName>System.CodeDom.Compiler.CompilerError</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>ErrorText</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Line</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Column</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ErrorNumber</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LineSource</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Reflection.Assembly</Name>
      <ViewSelectedBy>
        <TypeName>System.Reflection.Assembly</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>GAC</Label>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
            <Width>14</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>GlobalAssemblyCache</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ImageRuntimeVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Location</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Reflection.Assembly</Name>
      <ViewSelectedBy>
        <TypeName>System.Reflection.Assembly</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>CodeBase</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EntryPoint</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EscapedCodeBase</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>FullName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>GlobalAssemblyCache</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HostContext</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ImageFileMachine</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ImageRuntimeVersion</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Location</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ManifestModule</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MetadataToken</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PortableExecutableKind</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ReflectionOnly</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Reflection.AssemblyName</Name>
      <ViewSelectedBy>
        <TypeName>System.Reflection.AssemblyName</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>14</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Globalization.CultureInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Globalization.CultureInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>LCID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DisplayName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Diagnostics.FileVersionInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.FileVersionInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ProductVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>FileVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>FileName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Diagnostics.FileVersionInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.FileVersionInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>OriginalFileName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>FileDescription</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ProductName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Comments</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CompanyName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>FileName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>FileVersion</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ProductVersion</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsDebug</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsPatched</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsPreRelease</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsPrivateBuild</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsSpecialBuild</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Language</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LegalCopyright</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>LegalTrademarks</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PrivateBuild</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>SpecialBuild</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>FileVersionRaw</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ProductVersionRaw</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Diagnostics.EventLogEntry</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.EventLogEntry</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Index</Label>
            <Width>8</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Time</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>EntryType</Label>
            <Width>11</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>InstanceID</Label>
            <Width>12</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Message</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Index</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <FormatString>{0:MMM} {0:dd} {0:HH}:{0:mm}</FormatString>
                <PropertyName>TimeGenerated</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.EntryType</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Source</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>InstanceID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Message</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Diagnostics.EventLogEntry</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.EventLogEntry</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Index</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EntryType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>InstanceID</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Message</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Category</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CategoryNumber</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ReplacementStrings</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Source</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TimeGenerated</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TimeWritten</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>UserName</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Diagnostics.EventLog</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.EventLog</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Max(K)</Label>
            <Width>8</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Retain</Label>
            <Width>6</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>OverflowAction</Label>
            <Width>18</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Entries</Label>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Log</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.MaximumKilobytes.ToString('N0')</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MinimumRetentionDays</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>OverflowAction</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.Entries.Count.ToString('N0')</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Log</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Diagnostics.EventLog</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.EventLog</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Log</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>EnableRaisingEvents</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MaximumKilobytes</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MinimumRetentionDays</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>OverflowAction</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Version</Name>
      <ViewSelectedBy>
        <TypeName>System.Version</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>8</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Major</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Minor</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Build</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Revision</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Version</Name>
      <ViewSelectedBy>
        <TypeName>System.Version#IncludeLabel</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>26</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>27</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Major</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Minor</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Build</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Revision</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PSSemVerPreReleaseLabel</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PSSemVerBuildLabel</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.Automation.SemanticVersion</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.SemanticVersion</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>6</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>11</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Major</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Minor</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Patch</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PreReleaseLabel</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BuildLabel</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Drawing.Printing.PrintDocument</Name>
      <ViewSelectedBy>
        <TypeName>System.Drawing.Printing.PrintDocument</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>10</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>10</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Color</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Duplex</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Dictionary</Name>
      <ViewSelectedBy>
        <TypeName>System.Collections.DictionaryEntry</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>30</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Value</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Collections.DictionaryEntry</Name>
      <ViewSelectedBy>
        <TypeName>System.Collections.DictionaryEntry</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Value</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>ProcessModule</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.ProcessModule</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Size(K)</Label>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>50</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>$_.Size</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ModuleName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>FileName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>process</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.Process</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>NPM(K)</Label>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PM(M)</Label>
            <Width>8</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WS(M)</Label>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>CPU(s)</Label>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>3</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>[long]($_.NPM / 1024)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0:N2}" -f [float]($_.PM / 1MB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0:N2}" -f [float]($_.WS / 1MB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0:N2}" -f [float]($_.CPU)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SI</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ProcessName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Priority</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.Process</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PriorityClass</PropertyName>
        <Label>PriorityClass</Label>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>12</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ProcessName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>WorkingSet64</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>StartTime</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.Process</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <ScriptBlock>$_.StartTime.ToShortDateString()</ScriptBlock>
        <Label>StartTime.ToShortDateString()</Label>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>12</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ProcessName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>WorkingSet64</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>process</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.Process</TypeName>
      </ViewSelectedBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <PropertyName>ProcessName</PropertyName>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>ProcessWithUserName</Name>
      <ViewSelectedBy>
        <TypeName>System.Diagnostics.Process#IncludeUserName</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>WS(M)</Label>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>CPU(s)</Label>
            <Width>8</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>30</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>"{0:N2}" -f [float]($_.WS / 1MB)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>"{0:N2}" -f [float]($_.CPU)</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>UserName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ProcessName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>DirectoryEntry</Name>
      <ViewSelectedBy>
        <TypeName>System.DirectoryServices.DirectoryEntry</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>distinguishedName</Label>
                <PropertyName>distinguishedName</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Path</Label>
                <PropertyName>path</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>PSSnapInInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSSnapInInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Name</Label>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PSVersion</Label>
                <PropertyName>PSVersion</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Description</Label>
                <PropertyName>Description</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>PSSnapInInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSSnapInInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>30</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PSVersion</Label>
            <Width>20</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
            <Width>30</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PSVersion</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>service</Name>
      <ViewSelectedBy>
        <TypeName>System.ServiceProcess.ServiceController</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>18</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>38</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DisplayName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.ServiceProcess.ServiceController</Name>
      <ViewSelectedBy>
        <TypeName>System.ServiceProcess.ServiceController</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DisplayName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Status</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DependentServices</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ServicesDependedOn</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CanPauseAndContinue</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CanShutdown</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CanStop</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ServiceType</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.TimeSpan</Name>
      <ViewSelectedBy>
        <TypeName>System.TimeSpan</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Days</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Hours</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Minutes</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Seconds</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Milliseconds</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Ticks</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TotalDays</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TotalHours</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TotalMinutes</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TotalSeconds</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>TotalMilliseconds</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.TimeSpan</Name>
      <ViewSelectedBy>
        <TypeName>System.TimeSpan</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders />
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Days</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Hours</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Minutes</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Seconds</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Milliseconds</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.TimeSpan</Name>
      <ViewSelectedBy>
        <TypeName>System.TimeSpan</TypeName>
      </ViewSelectedBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <PropertyName>TotalMilliseconds</PropertyName>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>System.AppDomain</Name>
      <ViewSelectedBy>
        <TypeName>System.AppDomain</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>FriendlyName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Id</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ApplicationDescription</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>BaseDirectory</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DynamicDirectory</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>RelativeSearchPath</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>SetupInformation</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ShadowCopyFiles</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>DateTime</Name>
      <ViewSelectedBy>
        <TypeName>System.DateTime</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <PropertyName>DateTime</PropertyName>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>System.Security.AccessControl.ObjectSecurity</Name>
      <ViewSelectedBy>
        <TypeName>System.Security.AccessControl.ObjectSecurity</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader />
          <TableColumnHeader />
          <TableColumnHeader>
            <Label>Access</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Path</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Owner</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>AccessToString</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Security.AccessControl.ObjectSecurity</Name>
      <ViewSelectedBy>
        <TypeName>System.Security.AccessControl.ObjectSecurity</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Path</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Owner</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Group</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Access</Label>
                <PropertyName>AccessToString</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Audit</Label>
                <PropertyName>AuditToString</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Sddl</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.ManagementClass</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.ManagementClass</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>__Namespace</PropertyName>
        <Label>NameSpace</Label>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>35</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Methods</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Properties</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimClass</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimClass</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <ScriptBlock>$_.CimSystemProperties.Namespace</ScriptBlock>
        <Label>NameSpace</Label>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>CimClassName</Label>
            <Width>35</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CimClassName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>CimClassMethods</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>CimClassProperties</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Guid</Name>
      <ViewSelectedBy>
        <TypeName>System.Guid</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders />
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Guid</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.ManagementObject#root\cimv2\Win32_PingStatus</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.ManagementObject#root\cimv2\Win32_PingStatus</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Destination</Label>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IPV4Address</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IPV6Address</Label>
            <Width>40</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Bytes</Label>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Time(ms)</Label>
            <Width>9</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>__Server</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IPV4Address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IPV6Address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BufferSize</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ResponseTime</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PingStatus</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PingStatus</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Destination</Label>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IPV4Address</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IPV6Address</Label>
            <Width>40</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Bytes</Label>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Time(ms)</Label>
            <Width>9</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>
                            $sourceName = $_.PSComputerName;
                            if($sourceName -eq ".")
                            {$sourceName = $env:COMPUTERNAME;}

                            return $sourceName;
                        </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IPV4Address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IPV6Address</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BufferSize</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ResponseTime</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.ManagementObject#root\default\SystemRestore</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.ManagementObject#root\default\SystemRestore</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>CreationTime</Label>
            <Width>22</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
            <Width>30</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SequenceNumber</Label>
            <Width>17</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>EventType</Label>
            <Width>17</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RestorePointType</Label>
            <Width>22</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>
                    return $_.ConvertToDateTime($_.CreationTime)
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SequenceNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                    $eventType = $_.EventType;
                    if($_.EventType -eq 100)
                    {$eventType = "BEGIN_SYSTEM_CHANGE";}

                    if($_.EventType -eq 101)
                    {$eventType = "END_SYSTEM_CHANGE";}

                    if($_.EventType -eq 102)
                    {$eventType = "BEGIN_NESTED_SYSTEM_CHANGE";}

                    if($_.EventType -eq 103)
                    {$eventType = "END_NESTED_SYSTEM_CHANGE";}

                    return $eventType;
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                $RestorePointType = $_.RestorePointType;
                if($_.RestorePointType -eq 0)
                { $RestorePointType = "APPLICATION_INSTALL";}

                if($_.RestorePointType -eq 1)
                { $RestorePointType = "APPLICATION_UNINSTALL";}

                if($_.RestorePointType -eq 10)
                { $RestorePointType = "DEVICE_DRIVER_INSTALL";}

                if($_.RestorePointType -eq 12)
                { $RestorePointType = "MODIFY_SETTINGS";}

                if($_.RestorePointType -eq 13)
                { $RestorePointType = "CANCELLED_OPERATION";}

                    return $RestorePointType;
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/default/SystemRestore</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/default/SystemRestore</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>CreationTime</Label>
            <Width>22</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
            <Width>30</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SequenceNumber</Label>
            <Width>17</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>EventType</Label>
            <Width>17</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RestorePointType</Label>
            <Width>22</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>
                    return $_.ConvertToDateTime($_.CreationTime)
                  </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SequenceNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                    $eventType = $_.EventType;
                    if($_.EventType -eq 100)
                    {$eventType = "BEGIN_SYSTEM_CHANGE";}

                    if($_.EventType -eq 101)
                    {$eventType = "END_SYSTEM_CHANGE";}

                    if($_.EventType -eq 102)
                    {$eventType = "BEGIN_NESTED_SYSTEM_CHANGE";}

                    if($_.EventType -eq 103)
                    {$eventType = "END_NESTED_SYSTEM_CHANGE";}

                    return $eventType;
                  </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                    $RestorePointType = $_.RestorePointType;
                    if($_.RestorePointType -eq 0)
                    { $RestorePointType = "APPLICATION_INSTALL";}

                    if($_.RestorePointType -eq 1)
                    { $RestorePointType = "APPLICATION_UNINSTALL";}

                    if($_.RestorePointType -eq 10)
                    { $RestorePointType = "DEVICE_DRIVER_INSTALL";}

                    if($_.RestorePointType -eq 12)
                    { $RestorePointType = "MODIFY_SETTINGS";}

                    if($_.RestorePointType -eq 13)
                    { $RestorePointType = "CANCELLED_OPERATION";}

                    return $RestorePointType;
                  </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.ManagementObject#root\cimv2\Win32_QuickFixEngineering</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.ManagementObject#root\cimv2\Win32_QuickFixEngineering</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>HotFixID</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>InstalledBy</Label>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>InstalledOn</Label>
            <Width>26</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>__SERVER</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>HotFixID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>InstalledBy</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>InstalledOn</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_QuickFixEngineering</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_QuickFixEngineering</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>HotFixID</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>InstalledBy</Label>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>InstalledOn</Label>
            <Width>26</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ComputerName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>HotFixID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>InstalledBy</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>InstalledOn</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Process</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Process</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>ProcessId</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>HandleCount</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>WorkingSetSize</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>VirtualSize</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ProcessId</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>HandleCount</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>WorkingSetSize</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>VirtualSize</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_ComputerSystem</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_ComputerSystem</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PrimaryOwnerName</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>TotalPhysicalMemory</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Manufacturer</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PrimaryOwnerName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Domain</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>TotalPhysicalMemory</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Model</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Manufacturer</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_PROCESSOR</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_PROCESSOR</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DeviceID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Caption</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MaxClockSpeed</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SocketDesignation</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Manufacturer</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DeviceID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Caption</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MaxClockSpeed</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SocketDesignation</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Manufacturer</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_DCOMApplication</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_DCOMApplication</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>AppID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>InstallDate</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>AppID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>InstallDate</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_DESKTOP</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_DESKTOP</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SettingID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ScreenSaverActive</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ScreenSaverSecure</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ScreenSaverTimeout</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>SettingID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ScreenSaverActive</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ScreenSaverSecure</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ScreenSaverTimeout</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_DESKTOPMONITOR</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/WIN32_DESKTOPMONITOR</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DeviceID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DisplayType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MonitorManufacturer</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ScreenHeight</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ScreenWidth</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DeviceID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DisplayType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MonitorManufacturer</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ScreenHeight</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ScreenWidth</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DeviceMemoryAddress</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DeviceMemoryAddress</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MemoryType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MemoryType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DiskDrive</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DiskDrive</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DeviceID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Caption</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Partitions</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DeviceID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Caption</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Partitions</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Size</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Model</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DiskQuota</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DiskQuota</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DiskSpaceUsed</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Limit</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>QuotaVolume</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>User</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DiskSpaceUsed</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Limit</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>QuotaVolume</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>User</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Environment</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Environment</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>UserName</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>VariableValue</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>UserName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>VariableValue</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Directory</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Directory</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Hidden</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Archive</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Writeable</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LastModified</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Hidden</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Archive</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Writeable</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LastModified</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Group</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Group</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Caption</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>SID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Caption</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Domain</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_IDEController</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_IDEController</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StatusInfo</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProtocolSupported</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Manufacturer</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>StatusInfo</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ProtocolSupported</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Manufacturer</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_IRQResource</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_IRQResource</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IRQNumber</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Hardware</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>TriggerLevel</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>TriggerType</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IRQNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Hardware</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>TriggerLevel</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>TriggerType</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_ScheduledJob</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_ScheduledJob</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>JobId</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Owner</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Priority</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Command</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>JobId</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Owner</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Priority</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Command</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_LoadOrderGroup</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_LoadOrderGroup</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>GroupOrder</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>GroupOrder</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_LogicalDisk</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_LogicalDisk</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DeviceID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriveType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProviderName</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>VolumeName</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>FreeSpace</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DeviceID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriveType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ProviderName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>VolumeName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Size</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>FreeSpace</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_LogonSession</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_LogonSession</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>LogonId</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LogonType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StartTime</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>AuthenticationPackage</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>LogonId</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>LogonType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>StartTime</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>AuthenticationPackage</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PhysicalMemoryArray</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PhysicalMemoryArray</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MemoryDevices</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MaxCapacity</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Model</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MemoryDevices</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MaxCapacity</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Model</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_OnBoardDevice</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_OnBoardDevice</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DeviceType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Enabled</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DeviceType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SerialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Enabled</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_OperatingSystem</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_OperatingSystem</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SystemDirectory</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Organization</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>BuildNumber</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>RegisteredUser</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>SystemDirectory</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Organization</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BuildNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>RegisteredUser</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SerialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DiskPartition</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_DiskPartition</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NumberOfBlocks</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>BootPartition</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PrimaryPartition</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Index</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NumberOfBlocks</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BootPartition</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PrimaryPartition</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Size</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Index</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PortConnector</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PortConnector</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Tag</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PortType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ConnectorType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SerialNumber</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ExternalReferenceDesignator</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Tag</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PortType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ConnectorType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SerialNumber</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ExternalReferenceDesignator</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_QuotaSetting</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_QuotaSetting</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>SettingID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Caption</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>VolumePath</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DefaultLimit</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DefaultWarningLimit</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>SettingID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Caption</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>VolumePath</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DefaultLimit</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DefaultWarningLimit</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_SCSIController</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_SCSIController</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DriverName</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StatusInfo</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ProtocolSupported</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Manufacturer</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DriverName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>StatusInfo</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ProtocolSupported</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Manufacturer</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Service</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Service</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>ProcessId</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>StartMode</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ExitCode</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ProcessId</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>StartMode</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ExitCode</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_UserAccount</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_UserAccount</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Caption</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>AccountType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Caption</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>AccountType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Domain</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NetworkProtocol</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NetworkProtocol</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Caption</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Caption</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NetworkAdapter</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NetworkAdapter</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DeviceID</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>AdapterType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ServiceName</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DeviceID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>AdapterType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ServiceName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NetworkAdapterConfiguration</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NetworkAdapterConfiguration</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>ServiceName</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DHCPEnabled</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Index</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ServiceName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DHCPEnabled</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Index</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NTDomain</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_NTDomain</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>DomainName</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DnsForestName</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>DomainControllerName</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>DomainName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DnsForestName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DomainControllerName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Printer</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Printer</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ShareName</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SystemName</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PrinterState</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PrinterStatus</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Location</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ShareName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>SystemName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PrinterState</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PrinterStatus</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Location</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PrintJob</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_PrintJob</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>JobId</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>JobStatus</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Owner</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Priority</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Size</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Document</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>JobId</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>JobStatus</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Owner</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Priority</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Size</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Document</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Product</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#root/cimv2/Win32_Product</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>16</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Caption</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Vendor</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IdentifyingNumber</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Caption</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Vendor</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IdentifyingNumber</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Net.NetworkCredential</Name>
      <ViewSelectedBy>
        <TypeName>System.Net.NetworkCredential</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>UserName</Label>
            <Width>50</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Domain</Label>
            <Width>50</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>UserName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Domain</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSMethod</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSMethod</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>OverloadDefinitions</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>
                                    $_.OverloadDefinitions | Out-String
                                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.Management.Infrastructure.CimInstance#__PartialCIMInstance</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.Management.Infrastructure.CimInstance#__PartialCIMInstance</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <Frame>
                <CustomItem>
                  <ExpressionBinding>
                    <ScriptBlock>
                                            $str = $_ | Microsoft.PowerShell.Utility\Format-List -Property * | Microsoft.PowerShell.Utility\Out-String
                                            $str
                                        </ScriptBlock>
                  </ExpressionBinding>
                </CustomItem>
              </Frame>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>System.Threading.Tasks.Task</Name>
      <ViewSelectedBy>
        <TypeName>System.Threading.Tasks.Task</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Id</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IsCompleted</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IsCompleted</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Threading.Tasks.Task</Name>
      <ViewSelectedBy>
        <TypeName>System.Threading.Tasks.Task</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>AsyncState</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>AsyncWaitHandle</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CompletedSynchronously</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CreationOptions</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Exception</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Id</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsCanceled</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsCompleted</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsCompletedSuccessfully</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>IsFaulted</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Result</Label>
                <ScriptBlock>
                                    if ($_.IsCompleted) {
                                        $_.Result
                                    }
                                </ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>Status</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>FileSecurityTable</Name>
      <ViewSelectedBy>
        <TypeName>System.Security.AccessControl.FileSystemSecurity</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Path</Label>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader>
            <Label>Access</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <ScriptBlock>
                                    split-path $_.Path -leaf
                                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Owner</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                                    $_.AccessToString
                                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>FileSystemStream</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.AlternateStreamData</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Filename</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>20</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Stream</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Length</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.RuntimeType</Name>
      <ViewSelectedBy>
        <TypeName>System.RuntimeType</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>IsPublic</Label>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IsSerial</Label>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>40</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>IsPublic</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IsSerializable</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BaseType</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.MemberDefinition</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.MemberDefinition</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>TypeName</PropertyName>
      </GroupBy>
      <TableControl>
        <AutoSize />
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MemberType</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Definition</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MemberType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Definition</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.GroupInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.GroupInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Count</Label>
            <Width>5</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>25</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Count</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Group</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.GroupInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.GroupInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Count</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Group</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Values</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.GroupInfoNoElement</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.GroupInfoNoElement</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Count</Label>
            <Width>5</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>25</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Count</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.GroupInfoNoElement</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.GroupInfoNoElement</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Count</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Values</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>history</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.HistoryInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>4</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Duration</Label>
            <Width>12</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                                if ($_.Duration.TotalHours -ge 10) {
                                    return "{0}:{1:mm}:{1:ss}.{1:fff}" -f [int]$_.Duration.TotalHours, $_.Duration
                                }
                                elseif ($_.Duration.TotalHours -ge 1) {
                                    $formatString = "h\:mm\:ss\.fff"
                                }
                                elseif ($_.Duration.TotalMinutes -ge 1) {
                                    $formatString = "m\:ss\.fff"
                                }
                                else {
                                    $formatString = "s\.fff"
                                }

                                $_.Duration.ToString($formatString)
                              </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>CommandLine</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>history</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.HistoryInfo</TypeName>
      </ViewSelectedBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <PropertyName>CommandLine</PropertyName>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>MatchInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.MatchInfo</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>$_.ToEmphasizedString(((get-location).path))</ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>MatchInfo</Name>
      <ViewSelectedBy>
        <TypeName>Deserialized.Microsoft.PowerShell.Commands.MatchInfo</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>$_.Line</ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>Variable</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSVariable</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>30</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Value</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>PathInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PathInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Path</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>CommandInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.CommandInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>CommandInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.AliasInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>CommandType</Label>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>50</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
            <Width>10</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Source</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                                if ($_.CommandType -eq "Alias")
                                {
                                  $_.DisplayName
                                }
                                else
                                {
                                  $_.Name
                                }
                              </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Source</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>TypeData</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.Runspaces.TypeData</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>TypeName</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Members</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>TypeName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Members</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>ControlPanelItem</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.ControlPanelItem</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>CanonicalName</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Category</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>CanonicalName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Category</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>ApplicationInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ApplicationInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Path</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.Automation.ApplicationInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ApplicationInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Definition</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Extension</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Path</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>FileVersionInfo</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>ScriptInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ScriptInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Definition</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.Automation.ScriptInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ScriptInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Definition</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Path</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>ExternalScriptInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ExternalScriptInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Path</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>FunctionInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.FunctionInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Function</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>FilterInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.FilterInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Filter</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>AliasInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.AliasInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DisplayName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.Automation.AliasInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.AliasInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>DisplayName</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Definition</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ReferencedCommand</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ResolvedCommand</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>memberinfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.ListCommand+MemberInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Class</Label>
            <Width>11</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>25</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>MemberClass</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MemberData</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.ListCommand+MemberInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.ListCommand+MemberInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MemberClass</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MemberData</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>drive</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.ActiveDirectoryProvider+ADPSDriveInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>10</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Used (GB)</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Free (GB)</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Provider</Label>
            <Width>13</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Root</Label>
            <Width>35</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <Alignment>Right</Alignment>
                <ScriptBlock>if($_.Used -or $_.Free) { "{0:###0.00}" -f ($_.Used / 1GB) }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <Alignment>Right</Alignment>
                <ScriptBlock>if($_.Used -or $_.Free) { "{0:###0.00}" -f ($_.Free / 1GB) }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.Provider.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if($null -ne $_.DisplayRoot) { $_.DisplayRoot } else { $_.Root }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <Alignment>Right</Alignment>
                <PropertyName>CurrentLocation</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>provider</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ProviderInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader />
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Capabilities</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Drives</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>provider</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ProviderInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Drives</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Path</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Home</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Capabilities</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ImplementingType</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.CmdletInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.CmdletInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Definition</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Path</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DLL</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HelpFile</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ParameterSets</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ImplementingType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Verb</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Noun</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.CommandInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.FilterInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Definition</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSDriveInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSDriveInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Provider</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Root</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CurrentLocation</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.Subsystem.SubsystemInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.Subsystem.SubsystemInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Kind</Label>
            <Width>17</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>SubsystemType</Label>
            <Width>18</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IsRegistered</Label>
            <Width>12</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Implementations</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Kind</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.SubsystemType.Name</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IsRegistered</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Implementations</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>ShellVariable</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ShellVariable</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Value</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>ScriptBlock</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ScriptBlock</TypeName>
      </ViewSelectedBy>
      <OutOfBand />
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>$_</ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>GetErrorInstance</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ErrorRecord#PSExtendedError</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSErrorIndex</PropertyName>
        <Label>ErrorIndex</Label>
      </GroupBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>
                            Set-StrictMode -Off

                            $maxDepth = 10
                            $ellipsis = "`u{2026}"
                            $resetColor = ''
                            $errorColor = ''
                            if ($Host.UI.SupportsVirtualTerminal -and ([string]::IsNullOrEmpty($env:__SuppressAnsiEscapeSequences))) {
                                if ($null -ne $psstyle) {
                                    $errorColor = $psstyle.Formatting.Error
                                }

                                $resetColor = [System.Management.Automation.VTUtility]::GetEscapeSequence(
                                    [System.Management.Automation.VTUtility+VT]::Reset
                                )
                            }

                            function Get-VT100Color([ConsoleColor] $color) {
                                if (!$Host.UI.SupportsVirtualTerminal -or !([string]::IsNullOrEmpty($env:__SuppressAnsiEscapeSequences))) {
                                    return ''
                                }

                                return [System.Management.Automation.VTUtility]::GetEscapeSequence($color)
                            }

                            function Show-ErrorRecord($obj, [int]$indent = 0, [int]$depth = 1) {
                                $newline = [Environment]::Newline
                                $output = [System.Text.StringBuilder]::new()
                                $prefix = ' ' * $indent
                                $accentColor = ''

                                if ($null -ne $Host.PrivateData) {
                                    $accentColor = Get-VT100Color ($Host.PrivateData.FormatAccentColor ?? $Host.PrivateData.ErrorForegroundColor)
                                }

                                $expandTypes = @(
                                    'Microsoft.Rest.HttpRequestMessageWrapper'
                                    'Microsoft.Rest.HttpResponseMessageWrapper'
                                    'System.Management.Automation.InvocationInfo'
                                )

                                # if object is an Exception, add an ExceptionType property
                                if ($obj -is [Exception]) {
                                    $obj | Add-Member -NotePropertyName Type -NotePropertyValue $obj.GetType().FullName -ErrorAction Ignore
                                }

                                # first find the longest property so we can indent properly
                                $propLength = 0
                                foreach ($prop in $obj.PSObject.Properties) {
                                    if ($prop.Value -ne $null -and $prop.Value -ne [string]::Empty -and $prop.Name.Length -gt $propLength) {
                                        $propLength = $prop.Name.Length
                                    }
                                }

                                $addedProperty = $false
                                foreach ($prop in $obj.PSObject.Properties) {

                                    # don't show empty properties or our added property for $error[index]
                                    if ($prop.Value -ne $null -and $prop.Value -ne [string]::Empty -and $prop.Value.count -gt 0 -and $prop.Name -ne 'PSErrorIndex') {
                                        $addedProperty = $true
                                        $null = $output.Append($prefix)
                                        $null = $output.Append($accentColor)
                                        $null = $output.Append($prop.Name)
                                        $propNameIndent = ' ' * ($propLength - $prop.Name.Length)
                                        $null = $output.Append($propNameIndent)
                                        $null = $output.Append(' : ')
                                        $null = $output.Append($resetColor)

                                        $newIndent = $indent + 4

                                        # only show nested objects that are Exceptions, ErrorRecords, or types defined in $expandTypes and types not in $ignoreTypes
                                        if ($prop.Value -is [Exception] -or $prop.Value -is [System.Management.Automation.ErrorRecord] -or
                                            $expandTypes -contains $prop.TypeNameOfValue -or ($prop.TypeNames -ne $null -and $expandTypes -contains $prop.TypeNames[0])) {

                                            if ($depth -ge $maxDepth) {
                                                $null = $output.Append($ellipsis)
                                            }
                                            else {
                                                $null = $output.Append($newline)
                                                $null = $output.Append((Show-ErrorRecord $prop.Value $newIndent ($depth + 1)))
                                            }
                                        }
                                        # `TargetSite` has many members that are not useful visually, so we have a reduced view of the relevant members
                                        elseif ($prop.Name -eq 'TargetSite' -and $prop.Value.GetType().Name -eq 'RuntimeMethodInfo') {
                                            if ($depth -ge $maxDepth) {
                                                $null = $output.Append($ellipsis)
                                            }
                                            else {
                                                $targetSite = [PSCustomObject]@{
                                                    Name = $prop.Value.Name
                                                    DeclaringType = $prop.Value.DeclaringType
                                                    MemberType = $prop.Value.MemberType
                                                    Module = $prop.Value.Module
                                                }

                                                $null = $output.Append($newline)
                                                $null = $output.Append((Show-ErrorRecord $targetSite $newIndent ($depth + 1)))
                                            }
                                        }
                                        # `StackTrace` is handled specifically because the lines are typically long but necessary so they are left justified without additional indentation
                                        elseif ($prop.Name -eq 'StackTrace') {
                                            # for a stacktrace which is usually quite wide with info, we left justify it
                                            $null = $output.Append($newline)
                                            $null = $output.Append($prop.Value)
                                        }
                                        # Dictionary and Hashtable we want to show as Key/Value pairs, we don't do the extra whitespace alignment here
                                        elseif ($prop.Value.GetType().Name.StartsWith('Dictionary') -or $prop.Value.GetType().Name -eq 'Hashtable') {
                                            $isFirstElement = $true
                                            foreach ($key in $prop.Value.Keys) {
                                                if ($isFirstElement) {
                                                    $null = $output.Append($newline)
                                                }

                                                if ($key -eq 'Authorization') {
                                                    $null = $output.Append("${prefix}    ${accentColor}${key} : ${resetColor}${ellipsis}${newline}")
                                                }
                                                else {
                                                    $null = $output.Append("${prefix}    ${accentColor}${key} : ${resetColor}$($prop.Value[$key])${newline}")
                                                }

                                                $isFirstElement = $false
                                            }
                                        }
                                        # if the object implements IEnumerable and not a string, we try to show each object
                                        # We ignore the `Data` property as it can contain lots of type information by the interpreter that isn't useful here
                                        elseif (!($prop.Value -is [System.String]) -and $prop.Value.GetType().GetInterface('IEnumerable') -ne $null -and $prop.Name -ne 'Data') {

                                            if ($depth -ge $maxDepth) {
                                                $null = $output.Append($ellipsis)
                                            }
                                            else {
                                                $isFirstElement = $true
                                                foreach ($value in $prop.Value) {
                                                    $null = $output.Append($newline)
                                                    if (!$isFirstElement) {
                                                        $null = $output.Append($newline)
                                                    }
                                                    $null = $output.Append((Show-ErrorRecord $value $newIndent ($depth + 1)))
                                                    $isFirstElement = $false
                                                }
                                            }
                                        }
                                        # Anything else, we convert to string.
                                        # ToString() can throw so we use LanguagePrimitives.TryConvertTo() to hide a convert error
                                        else {
                                            $value = $null
                                            if ([System.Management.Automation.LanguagePrimitives]::TryConvertTo($prop.Value, [string], [ref]$value) -and $value -ne $null)
                                            {
                                                if ($prop.Name -eq 'PositionMessage') {
                                                    $value = $value.Insert($value.IndexOf('~'), $errorColor)
                                                }
                                                elseif ($prop.Name -eq 'Message') {
                                                    $value = $errorColor + $value
                                                }

                                                $isFirstLine = $true
                                                if ($value.Contains($newline)) {
                                                    # the 3 is to account for ' : '
                                                    $valueIndent = ' ' * ($propLength + 3)
                                                    # need to trim any extra whitespace already in the text
                                                    foreach ($line in $value.Split($newline)) {
                                                        if (!$isFirstLine) {
                                                            $null = $output.Append("${newline}${prefix}${valueIndent}")
                                                        }
                                                        $null = $output.Append($line.Trim())
                                                        $isFirstLine = $false
                                                    }
                                                }
                                                else {
                                                    $null = $output.Append($value)
                                                }
                                            }
                                        }

                                        $null = $output.Append($newline)
                                    }
                                }

                                # if we had added nested properties, we need to remove the last newline
                                if ($addedProperty) {
                                    $null = $output.Remove($output.Length - $newline.Length, $newline.Length)
                                }

                                $output.ToString()
                            }

                            # Add back original typename and remove PSExtendedError
                            if ($_.PSObject.TypeNames.Contains('System.Management.Automation.ErrorRecord#PSExtendedError')) {
                                $_.PSObject.TypeNames.Add('System.Management.Automation.ErrorRecord')
                                $null = $_.PSObject.TypeNames.Remove('System.Management.Automation.ErrorRecord#PSExtendedError')
                            }
                            elseif ($_.PSObject.TypeNames.Contains('System.Exception#PSExtendedError')) {
                                $_.PSObject.TypeNames.Add('System.Exception')
                                $null = $_.PSObject.TypeNames.Remove('System.Exception#PSExtendedError')
                            }

                            Show-ErrorRecord $_
                        </ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>ErrorInstance</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ErrorRecord</TypeName>
      </ViewSelectedBy>
      <OutOfBand />
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>
                                    if (@('NativeCommandErrorMessage','NativeCommandError') -notcontains $_.FullyQualifiedErrorId -and @('CategoryView','ConciseView','DetailedView') -notcontains $ErrorView)
                                    {
                                        $myinv = $_.InvocationInfo
                                        if ($myinv -and $myinv.MyCommand)
                                        {
                                            switch -regex ( $myinv.MyCommand.CommandType )
                                            {
                                                ([System.Management.Automation.CommandTypes]::ExternalScript)
                                                {
                                                    if ($myinv.MyCommand.Path)
                                                    {
                                                        $myinv.MyCommand.Path + ' : '
                                                    }

                                                    break
                                                }

                                                ([System.Management.Automation.CommandTypes]::Script)
                                                {
                                                    if ($myinv.MyCommand.ScriptBlock)
                                                    {
                                                        $myinv.MyCommand.ScriptBlock.ToString() + ' : '
                                                    }

                                                    break
                                                }
                                                default
                                                {
                                                    if ($myinv.InvocationName -match '^[&amp;\.]?$')
                                                    {
                                                        if ($myinv.MyCommand.Name)
                                                        {
                                                            $myinv.MyCommand.Name + ' : '
                                                        }
                                                    }
                                                    else
                                                    {
                                                        $myinv.InvocationName + ' : '
                                                    }

                                                    break
                                                }
                                            }
                                        }
                                        elseif ($myinv -and $myinv.InvocationName)
                                        {
                                            $myinv.InvocationName + ' : '
                                        }
                                    }
                                </ScriptBlock>
              </ExpressionBinding>
              <ExpressionBinding>
                <ScriptBlock>
                                    Set-StrictMode -Off
                                    $newline = [Environment]::Newline

                                    function Get-ConciseViewPositionMessage {

                                        $resetColor = ''
                                        if ($Host.UI.SupportsVirtualTerminal -and ([string]::IsNullOrEmpty($env:__SuppressAnsiEscapeSequences))) {
                                            $resetColor = [System.Management.Automation.VTUtility]::GetEscapeSequence(
                                                [System.Management.Automation.VTUtility+VT]::Reset
                                            )
                                        }

                                        function Get-VT100Color([ConsoleColor] $color) {
                                            if (!$Host.UI.SupportsVirtualTerminal -or !([string]::IsNullOrEmpty($env:__SuppressAnsiEscapeSequences))) {
                                                return ''
                                            }

                                            return [System.Management.Automation.VTUtility]::GetEscapeSequence($color)
                                        }

                                        # return length of string sans VT100 codes
                                        function Get-RawStringLength($string) {
                                            $vtCodes = "`e[0m", "`e[2;30m", "`e[2;31m", "`e[2;32m", "`e[2;33m", "`e[2;34m",
                                                "`e[2;35m", "`e[2;36m", "`e[2;37m", "`e[1;30m", "`e[1;31m", "`e[1;32m",
                                                "`e[1;33m", "`e[1;34m", "`e[1;35m", "`e[1;36m", "`e[1;37m"

                                            $newString = $string
                                            foreach ($vtCode in $vtCodes) {
                                                $newString = $newString.Replace($vtCode, '')
                                            }

                                            return $newString.Length
                                        }

                                        # returns a string cut to last whitespace
                                        function Get-TruncatedString($string, [int]$length) {

                                            if ($string.Length -le $length) {
                                                return $string
                                            }

                                            return ($string.Substring(0,$length) -split '\s',-2)[0]
                                        }

                                        $errorColor = ''
                                        $accentColor = ''

                                        if ($null -ne $Host.PrivateData) {
                                            $errorColor = Get-VT100Color $Host.PrivateData.ErrorForegroundColor
                                            $accentColor = Get-VT100Color ($Host.PrivateData.ErrorAccentColor ?? $errorColor)
                                        }

                                        $posmsg = ''
                                        $headerWhitespace = ''
                                        $offsetWhitespace = ''
                                        $message = ''
                                        $prefix = ''

                                        # Don't show line information if script module
                                        if (($myinv -and $myinv.ScriptName -or $myinv.ScriptLineNumber -gt 1 -or $err.CategoryInfo.Category -eq 'ParserError') -and !($myinv.ScriptName.EndsWith('.psm1', [System.StringComparison]::OrdinalIgnoreCase))) {
                                            $useTargetObject = $false

                                            # Handle case where there is a TargetObject and we can show the error at the target rather than the script source
                                            if ($_.TargetObject.Line -and $_.TargetObject.LineText) {
                                                $posmsg = "${resetcolor}$($_.TargetObject.File)${newline}"
                                                $useTargetObject = $true
                                            }
                                            elseif ($myinv.ScriptName) {
                                                if ($env:TERM_PROGRAM -eq 'vscode') {
                                                    # If we are running in vscode, we know the file:line:col links are clickable so we use this format
                                                    $posmsg = "${resetcolor}$($myinv.ScriptName):$($myinv.ScriptLineNumber):$($myinv.OffsetInLine)${newline}"
                                                }
                                                else {
                                                    $posmsg = "${resetcolor}$($myinv.ScriptName):$($myinv.ScriptLineNumber)${newline}"
                                                }
                                            }
                                            else {
                                                $posmsg = "${newline}"
                                            }

                                            if ($useTargetObject) {
                                                $scriptLineNumber = $_.TargetObject.Line
                                                $scriptLineNumberLength = $_.TargetObject.Line.ToString().Length
                                            }
                                            else {
                                                $scriptLineNumber = $myinv.ScriptLineNumber
                                                $scriptLineNumberLength = $myinv.ScriptLineNumber.ToString().Length
                                            }

                                            if ($scriptLineNumberLength -gt 4) {
                                                $headerWhitespace = ' ' * ($scriptLineNumberLength - 4)
                                            }

                                            $lineWhitespace = ''
                                            if ($scriptLineNumberLength -lt 4) {
                                                $lineWhitespace = ' ' * (4 - $scriptLineNumberLength)
                                            }

                                            $verticalBar = '|'
                                            $posmsg += "${accentColor}${headerWhitespace}Line ${verticalBar}${newline}"

                                            $highlightLine = ''
                                            if ($useTargetObject) {
                                                $line = $_.TargetObject.LineText.Trim()
                                                $offsetLength = 0
                                                $offsetInLine = 0
                                            }
                                            else {
                                                $positionMessage = $myinv.PositionMessage.Split($newline)
                                                $line = $positionMessage[1].Substring(1) # skip the '+' at the start
                                                $highlightLine = $positionMessage[$positionMessage.Count - 1].Substring(1)
                                                $offsetLength = $highlightLine.Trim().Length
                                                $offsetInLine = $highlightLine.IndexOf('~')
                                            }

                                            if (-not $line.EndsWith($newline)) {
                                                $line += $newline
                                            }

                                            # don't color the whole line
                                            if ($offsetLength -lt $line.Length - 1) {
                                                $line = $line.Insert($offsetInLine + $offsetLength, $resetColor).Insert($offsetInLine, $accentColor)
                                            }

                                            $posmsg += "${accentColor}${lineWhitespace}${ScriptLineNumber} ${verticalBar} ${resetcolor}${line}"
                                            $offsetWhitespace = ' ' * $offsetInLine
                                            $prefix = "${accentColor}${headerWhitespace}     ${verticalBar} ${errorColor}"
                                            if ($highlightLine -ne '') {
                                                $posMsg += "${prefix}${highlightLine}${newline}"
                                            }
                                            $message = "${prefix}"
                                        }

                                        if (! $err.ErrorDetails -or ! $err.ErrorDetails.Message) {
                                            if ($err.CategoryInfo.Category -eq 'ParserError' -and $err.Exception.Message.Contains("~$newline")) {
                                                # need to parse out the relevant part of the pre-rendered positionmessage
                                                $message += $err.Exception.Message.split("~$newline")[1].split("${newline}${newline}")[0]
                                            }
                                            elseif ($err.Exception) {
                                                $message += $err.Exception.Message
                                            }
                                            elseif ($err.Message) {
                                                $message += $err.Message
                                            }
                                            else {
                                                $message += $err.ToString()
                                            }
                                        }
                                        else {
                                            $message += $err.ErrorDetails.Message
                                        }

                                        # if rendering line information, break up the message if it's wider than the console
                                        if ($myinv -and $myinv.ScriptName -or $err.CategoryInfo.Category -eq 'ParserError') {
                                            $prefixLength = Get-RawStringLength -string $prefix
                                            $prefixVtLength = $prefix.Length - $prefixLength

                                            # replace newlines in message so it lines up correct
                                            $message = $message.Replace($newline, ' ').Replace("`n", ' ').Replace("`t", ' ')

                                            $windowWidth = 120
                                            if ($Host.UI.RawUI -ne $null) {
                                                $windowWidth = $Host.UI.RawUI.WindowSize.Width
                                            }

                                            if ($windowWidth -gt 0 -and ($message.Length - $prefixVTLength) -gt $windowWidth) {
                                                $sb = [Text.StringBuilder]::new()
                                                $substring = Get-TruncatedString -string $message -length ($windowWidth + $prefixVTLength)
                                                $null = $sb.Append($substring)
                                                $remainingMessage = $message.Substring($substring.Length).Trim()
                                                $null = $sb.Append($newline)
                                                while (($remainingMessage.Length + $prefixLength) -gt $windowWidth) {
                                                    $subMessage = $prefix + $remainingMessage
                                                    $substring = Get-TruncatedString -string $subMessage -length ($windowWidth + $prefixVtLength)

                                                    if ($substring.Length - $prefix.Length -gt 0)
                                                    {
                                                        $null = $sb.Append($substring)
                                                        $null = $sb.Append($newline)
                                                        $remainingMessage = $remainingMessage.Substring($substring.Length - $prefix.Length).Trim()
                                                    }
                                                    else
                                                    {
                                                        break
                                                    }
                                                }
                                                $null = $sb.Append($prefix + $remainingMessage.Trim())
                                                $message = $sb.ToString()
                                            }

                                            $message += $newline
                                        }

                                        $posmsg += "${errorColor}" + $message

                                        $reason = 'Error'
                                        if ($err.Exception -and $err.Exception.WasThrownFromThrowStatement) {
                                            $reason = 'Exception'
                                        }
                                        # MyCommand can be the script block, so we don't want to show that so check if it's an actual command
                                        elseif ($myinv.MyCommand -and $myinv.MyCommand.Name -and (Get-Command -Name $myinv.MyCommand -ErrorAction Ignore))
                                        {
                                            $reason = $myinv.MyCommand
                                        }
                                        # If it's a scriptblock, better to show the command in the scriptblock that had the error
                                        elseif ($_.CategoryInfo.Activity) {
                                            $reason = $_.CategoryInfo.Activity
                                        }
                                        elseif ($myinv.MyCommand) {
                                            $reason = $myinv.MyCommand
                                        }
                                        elseif ($myinv.InvocationName) {
                                            $reason = $myinv.InvocationName
                                        }
                                        elseif ($err.CategoryInfo.Category) {
                                            $reason = $err.CategoryInfo.Category
                                        }
                                        elseif ($err.CategoryInfo.Reason) {
                                            $reason = $err.CategoryInfo.Reason
                                        }

                                        $errorMsg = 'Error'

                                        "${errorColor}${reason}: ${posmsg}${resetcolor}"
                                    }

                                    $myinv = $_.InvocationInfo
                                    $err = $_
                                    if (!$myinv -and $_.ErrorRecord -and $_.ErrorRecord.InvocationInfo) {
                                        $err = $_.ErrorRecord
                                        $myinv = $err.InvocationInfo
                                    }

                                    if ($err.FullyQualifiedErrorId -eq 'NativeCommandErrorMessage' -or $err.FullyQualifiedErrorId -eq 'NativeCommandError') {
                                        $err.Exception.Message
                                    }
                                    else
                                    {
                                        $myinv = $err.InvocationInfo
                                        if ($ErrorView -eq 'DetailedView') {
                                            return (Get-Error | Out-String)
                                        }
                                        elseif ($ErrorView -eq 'ConciseView') {
                                            $posmsg = Get-ConciseViewPositionMessage
                                        }
                                        elseif ($myinv -and ($myinv.MyCommand -or ($err.CategoryInfo.Category -ne 'ParserError'))) {
                                            $posmsg = $myinv.PositionMessage
                                        } else {
                                            $posmsg = ''
                                        }

                                        if ($posmsg -ne '')
                                        {
                                            $posmsg = $newline + $posmsg
                                        }

                                        if ($err.PSMessageDetails) {
                                            $posmsg = ' : ' +  $err.PSMessageDetails + $posmsg
                                        }

                                        if ($ErrorView -eq 'ConciseView') {
                                            return $posmsg
                                        }

                                        $indent = 4

                                        $errorCategoryMsg = $err.ErrorCategory_Message

                                        if ($null -ne $errorCategoryMsg)
                                        {
                                            $indentString = '+ CategoryInfo          : ' + $err.ErrorCategory_Message
                                        }
                                        else
                                        {
                                            $indentString = '+ CategoryInfo          : ' + $err.CategoryInfo
                                        }

                                        $posmsg += $newline + $indentString

                                        $indentString = "+ FullyQualifiedErrorId : " + $err.FullyQualifiedErrorId
                                        $posmsg += $newline + $indentString

                                        $originInfo = $err.OriginInfo

                                        if (($null -ne $originInfo) -and ($null -ne $originInfo.PSComputerName))
                                        {
                                            $indentString = "+ PSComputerName        : " + $originInfo.PSComputerName
                                            $posmsg += $newline + $indentString
                                        }

                                        if ($ErrorView -eq 'CategoryView') {
                                            $err.CategoryInfo.GetMessage()
                                        }
                                        elseif (! $err.ErrorDetails -or ! $err.ErrorDetails.Message) {
                                            $err.Exception.Message + $posmsg
                                        } else {
                                            $err.ErrorDetails.Message + $posmsg
                                        }
                                    }
                                </ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>WarningRecord</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.WarningRecord</TypeName>
      </ViewSelectedBy>
      <OutOfBand />
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <PropertyName>Message</PropertyName>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>DeserializedWarningRecord</Name>
      <ViewSelectedBy>
        <TypeName>Deserialized.System.Management.Automation.WarningRecord</TypeName>
      </ViewSelectedBy>
      <OutOfBand />
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <PropertyName>InformationalRecord_Message</PropertyName>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>InformationRecord</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.InformationRecord</TypeName>
      </ViewSelectedBy>
      <OutOfBand />
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>$_.ToString()</ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>CommandParameterSetInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.CommandParameterSetInfo</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <Text>Parameter Set Name: </Text>
              <ExpressionBinding>
                <PropertyName>Name</PropertyName>
              </ExpressionBinding>
              <NewLine />
              <Text>Is default parameter set: </Text>
              <ExpressionBinding>
                <PropertyName>IsDefault</PropertyName>
              </ExpressionBinding>
              <NewLine />
              <ExpressionBinding>
                <EnumerateCollection />
                <PropertyName>Parameters</PropertyName>
                <CustomControl>
                  <CustomEntries>
                    <CustomEntry>
                      <CustomItem>
                        <NewLine />
                        <Frame>
                          <LeftIndent>2</LeftIndent>
                          <CustomItem>
                            <Text>Parameter Name: </Text>
                            <ExpressionBinding>
                              <PropertyName>Name</PropertyName>
                            </ExpressionBinding>
                            <NewLine />
                            <Frame>
                              <LeftIndent>2</LeftIndent>
                              <CustomItem>
                                <Text>ParameterType = </Text>
                                <ExpressionBinding>
                                  <PropertyName>ParameterType</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>Position = </Text>
                                <ExpressionBinding>
                                  <PropertyName>Position</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>IsMandatory = </Text>
                                <ExpressionBinding>
                                  <PropertyName>IsMandatory</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>IsDynamic = </Text>
                                <ExpressionBinding>
                                  <PropertyName>IsDynamic</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>HelpMessage = </Text>
                                <ExpressionBinding>
                                  <PropertyName>HelpMessage</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>ValueFromPipeline = </Text>
                                <ExpressionBinding>
                                  <PropertyName>ValueFromPipeline</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>ValueFromPipelineByPropertyName = </Text>
                                <ExpressionBinding>
                                  <PropertyName>ValueFromPipelineByPropertyName</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>ValueFromRemainingArguments = </Text>
                                <ExpressionBinding>
                                  <PropertyName>ValueFromRemainingArguments</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>Aliases = </Text>
                                <ExpressionBinding>
                                  <PropertyName>Aliases</PropertyName>
                                </ExpressionBinding>
                                <NewLine />
                                <Text>Attributes =</Text>
                                <NewLine />
                                <ExpressionBinding>
                                  <EnumerateCollection />
                                  <PropertyName>Attributes</PropertyName>
                                  <CustomControl>
                                    <CustomEntries>
                                      <CustomEntry>
                                        <CustomItem>
                                          <Frame>
                                            <LeftIndent>2</LeftIndent>
                                            <CustomItem>
                                              <NewLine />
                                            </CustomItem>
                                          </Frame>
                                        </CustomItem>
                                      </CustomEntry>
                                    </CustomEntries>
                                  </CustomControl>
                                </ExpressionBinding>
                              </CustomItem>
                            </Frame>
                          </CustomItem>
                        </Frame>
                      </CustomItem>
                    </CustomEntry>
                  </CustomEntries>
                </CustomControl>
              </ExpressionBinding>
              <NewLine />
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>Runspace</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.Runspaces.Runspace</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Id</Label>
            <Width>3</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ComputerName</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Type</Label>
            <Width>13</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Width>13</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Availability</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                    if ($null -ne $_.ConnectionInfo)
                    {
                      $_.ConnectionInfo.ComputerName
                    }
                    else
                    {
                      "localhost"
                    }
                  </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                    if ($null -ne $_.ConnectionInfo)
                    {
                      "Remote"
                    }
                    else
                    {
                      "Local"
                    }
                  </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.RunspaceStateInfo.State</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                    if (($null -ne $_.Debugger) -and ($_.Debugger.InBreakpoint))
                    {
                        "InBreakpoint"
                    }
                    else
                    {
                        $_.RunspaceAvailability
                    }
                  </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>PSSession</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.Runspaces.PSSession</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Id</Label>
            <Width>3</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Transport</Label>
            <Width>9</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ComputerName</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ComputerType</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Width>13</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ConfigurationName</Label>
            <Width>20</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Availability</Label>
            <Width>13</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Transport</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ComputerName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ComputerType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ConfigurationName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Availability</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Job</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.Job</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Id</Label>
            <Width>6</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PSJobTypeName</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>State</Label>
            <Width>13</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>HasMoreData</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Location</Label>
            <Width>20</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Command</Label>
            <Width>25</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>PSJobTypeName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>State</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>HasMoreData</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Location</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Command</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.TextMeasureInfo</Name>
      <ViewSelectedBy>
        <TypeName>Deserialized.Microsoft.PowerShell.Commands.TextMeasureInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Lines</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Words</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Characters</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Property</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Lines</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Words</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Characters</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Property</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.GenericMeasureInfo</Name>
      <ViewSelectedBy>
        <TypeName>Deserialized.Microsoft.PowerShell.Commands.GenericMeasureInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Count</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Average</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Sum</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Maximum</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Minimum</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Property</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>CallStackFrame</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.CallStackFrame</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Command</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Arguments</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Location</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Command</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Arguments</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Location</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Breakpoint</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.CommandBreakpoint</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>ID</Label>
            <Width>4</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Script</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Line</Label>
            <Width>4</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Command</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Variable</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Action</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ID</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>if ($_.Script) { [System.IO.Path]::GetFileName($_.Script) }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Line</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Command</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Variable</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Action</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Breakpoint</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.CommandBreakpoint</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>ID</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Script</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Enabled</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HitCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Action</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>System.Management.Automation.LineBreakpoint</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>ID</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Script</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Line</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Column</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Enabled</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HitCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Action</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>System.Management.Automation.VariableBreakpoint</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>ID</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Variable</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>AccessMode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Enabled</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HitCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Action</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
          <ListEntry>
            <EntrySelectedBy>
              <TypeName>System.Management.Automation.CommandBreakpoint</TypeName>
            </EntrySelectedBy>
            <ListItems>
              <ListItem>
                <PropertyName>ID</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Command</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Enabled</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HitCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Action</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>PSSessionConfiguration</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.PSSessionConfigurationCommands#PSSessionConfiguration</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PSVersion</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>StartupScript</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>RunAsUser</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Permission</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.ComputerChangeInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.ComputerChangeInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>HasSucceeded</Label>
            <Width>12</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ComputerName</Label>
            <Width>25</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>HasSucceeded</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>ComputerName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.RenameComputerChangeInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.RenameComputerChangeInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>HasSucceeded</Label>
            <Width>12</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>OldComputerName</Label>
            <Width>25</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>NewComputerName</Label>
            <Width>25</Width>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>HasSucceeded</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>OldComputerName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>NewComputerName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Module</Name>
      <ViewSelectedBy>
        <TypeName>ModuleInfoGrouping</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <ScriptBlock>Split-Path -Parent $_.Path | ForEach-Object { if([Version]::TryParse((Split-Path $_ -Leaf), [ref]$null)) { Split-Path -Parent $_} else {$_} } | Split-Path -Parent</ScriptBlock>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PreRelease</Label>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>35</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PSEdition</Label>
            <Width>9</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ExportedCommands</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ModuleType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            if ($_.PrivateData -and
                                $_.PrivateData.ContainsKey('PSData') -and
                                $_.PrivateData.PSData.ContainsKey('PreRelease'))
                            {
                                    $_.PrivateData.PSData.PreRelease
                            }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            $result = [System.Collections.ArrayList]::new()
                            $editions = $_.CompatiblePSEditions
                            if (-not $editions)
                            {
                                $editions = @('Desktop')
                            }

                            foreach ($edition in $editions)
                            {
                                $result += $edition.Substring(0,4)
                            }

                            ($result | Sort-Object) -join ','</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.ExportedCommands.Keys</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Module</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSModuleInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>PreRelease</Label>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>35</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>ExportedCommands</Label>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>ModuleType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            if ($_.PrivateData -and
                                $_.PrivateData.ContainsKey('PSData') -and
                                $_.PrivateData.PSData.ContainsKey('PreRelease'))
                            {
                                    $_.PrivateData.PSData.PreRelease
                            }</ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>$_.ExportedCommands.Keys</ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Module</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSModuleInfo</TypeName>
      </ViewSelectedBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <PropertyName>Name</PropertyName>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>Module</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSModuleInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Path</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ModuleType</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Version</PropertyName>
              </ListItem>
              <ListItem>
                <Label>PreRelease</Label>
                <ScriptBlock>
                            if ($_.PrivateData -and
                                $_.PrivateData.ContainsKey('PSData') -and
                                $_.PrivateData.PSData.ContainsKey('PreRelease'))
                            {
                                    $_.PrivateData.PSData.PreRelease
                            }</ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>NestedModules</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ExportedFunctions</Label>
                <ScriptBlock>$_.ExportedFunctions.Keys</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ExportedCmdlets</Label>
                <ScriptBlock>$_.ExportedCmdlets.Keys</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ExportedVariables</Label>
                <ScriptBlock>$_.ExportedVariables.Keys</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ExportedAliases</Label>
                <ScriptBlock>$_.ExportedAliases.Keys</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>ExperimentalFeature</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ExperimentalFeature</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>35</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>35</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Enabled</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Source</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>ExperimentalFeature</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.ExperimentalFeature</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Enabled</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Source</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Description</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.BasicHtmlWebResponseObject</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.BasicHtmlWebResponseObject</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>StatusDescription</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Content</Label>
                <ScriptBlock>
                                  $result = $_.Content
                                  $result = $result.Substring(0, [Math]::Min($result.Length, 200) )
                                  if($result.Length -eq 200) { $result += "`u{2026}" }

                                  $result
                                </ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>RawContent</Label>
                <ScriptBlock>
                                  $result = $_.RawContent
                                  $result = $result.Substring(0, [Math]::Min($result.Length, 200) )
                                  if($result.Length -eq 200) { $result += "`u{2026}" }

                                  $result
                                </ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>Headers</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Images</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>InputFields</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Links</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>RawContentLength</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>RelationLink</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.WebResponseObject</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.WebResponseObject</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>StatusCode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>StatusDescription</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Content</PropertyName>
              </ListItem>
              <ListItem>
                <Label>RawContent</Label>
                <ScriptBlock>
                                  $result = $_.RawContent
                                  $result = $result.Substring(0, [Math]::Min($result.Length, 200) )
                                  if($result.Length -eq 200) { $result += "`u{2026}" }

                                  $result
                                </ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>Headers</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>RawContentLength</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>RelationLink</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.FileHashInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.FileHashInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>70</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Algorithm</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Hash</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Path</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>PSRunspaceDebug&gt;</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.PSRunspaceDebug</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Id</Label>
            <Width>3</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>20</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Enabled</Label>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>BreakAll</Label>
            <Width>10</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>RunspaceId</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>RunspaceName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Enabled</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>BreakAll</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.MarkdownRender.PSMarkdownOptionInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.MarkdownRender.PSMarkdownOptionInfo</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Header1</Label>
                <ScriptBlock>$_.AsEscapeSequence('Header1')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Header2</Label>
                <ScriptBlock>$_.AsEscapeSequence('Header2')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Header3</Label>
                <ScriptBlock>$_.AsEscapeSequence('Header3')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Header4</Label>
                <ScriptBlock>$_.AsEscapeSequence('Header4')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Header5</Label>
                <ScriptBlock>$_.AsEscapeSequence('Header5')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Header6</Label>
                <ScriptBlock>$_.AsEscapeSequence('Header6')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Code</Label>
                <ScriptBlock>$_.AsEscapeSequence('Code')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Link</Label>
                <ScriptBlock>$_.AsEscapeSequence('Link')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Image</Label>
                <ScriptBlock>$_.AsEscapeSequence('Image')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>EmphasisBold</Label>
                <ScriptBlock>$_.AsEscapeSequence('EmphasisBold')</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>EmphasisItalics</Label>
                <ScriptBlock>$_.AsEscapeSequence('EmphasisItalics')</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.TestConnectionCommand+PingStatus</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.TestConnectionCommand+PingStatus</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Destination</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Ping</Label>
            <Width>4</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>16</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Address</Label>
            <Width>25</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Latency(ms)</Label>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>BufferSize(B)</Label>
            <Width>10</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Width>16</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Ping</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Source</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DisplayAddress</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            if ($_.Status -eq 'TimedOut') {
                                '*'
                            }
                            else {
                                $_.Latency
                            }
                        </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            if ($_.Status -eq 'TimedOut') {
                                '*'
                            }
                            else {
                                $_.BufferSize
                            }
                        </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.TestConnectionCommand+PingMtuStatus</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.TestConnectionCommand+PingMtuStatus</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Destination</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>16</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Address</Label>
            <Width>25</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Latency(ms)</Label>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Width>16</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>MtuSize(B)</Label>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Source</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>DisplayAddress</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            if ($_.Status -eq 'TimedOut') {
                                '*'
                            }
                            else {
                                $_.Latency
                            }
                        </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>MtuSize</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.TestConnectionCommand+TraceStatus</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.TestConnectionCommand+TraceStatus</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Target</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Hop</Label>
            <Width>3</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Hostname</Label>
            <Width>25</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Ping</Label>
            <Width>4</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Latency(ms)</Label>
            <Width>7</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Status</Label>
            <Width>16</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Source</Label>
            <Width>12</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>TargetAddress</Label>
            <Width>15</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Hop</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            if ($_.Hostname) {
                                $_.HostName
                            }
                            else {
                                '*'
                            }
                        </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Ping</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                            if ($_.Status -eq 'TimedOut') {
                                '*'
                            }
                            else {
                                $_.Latency
                            }
                        </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Status</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Source</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>TargetAddress</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>Microsoft.PowerShell.Commands.ByteCollection</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.ByteCollection</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Label</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Offset</Label>
            <Width>16</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Bytes
00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F</Label>
            <Width>47</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Ascii</Label>
            <Width>16</Width>
            <Alignment>Left</Alignment>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>HexOffset</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>HexBytes</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Ascii</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSStyle</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSStyle</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Reset</Label>
                <ScriptBlock>"$($_.Reset)$($_.Reset.Replace(""`e"",'`e'))"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BlinkOff</Label>
                <ScriptBlock>"$($_.BlinkOff)$($_.BlinkOff.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Blink</Label>
                <ScriptBlock>"$($_.Blink)$($_.Blink.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BoldOff</Label>
                <ScriptBlock>"$($_.BoldOff)$($_.BoldOff.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Bold</Label>
                <ScriptBlock>"$($_.Bold)$($_.Bold.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Hidden</Label>
                <ScriptBlock>"$($_.Hidden)$($_.Hidden.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>HiddenOff</Label>
                <ScriptBlock>"$($_.HiddenOff)$($_.HiddenOff.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Reverse</Label>
                <ScriptBlock>"$($_.Reverse)$($_.Reverse.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ReverseOff</Label>
                <ScriptBlock>"$($_.ReverseOff)$($_.ReverseOff.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ItalicOff</Label>
                <ScriptBlock>"$($_.ItalicOff)$($_.ItalicOff.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Italic</Label>
                <ScriptBlock>"$($_.Italic)$($_.Italic.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>UnderlineOff</Label>
                <ScriptBlock>"$($_.UnderlineOff)$($_.UnderlineOff.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Underline</Label>
                <ScriptBlock>"$($_.Underline)$($_.Underline.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StrikethroughOff</Label>
                <ScriptBlock>"$($_.StrikethroughOff)$($_.StrikethroughOff.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Strikethrough</Label>
                <ScriptBlock>"$($_.Strikethrough)$($_.Strikethrough.Replace(""`e"",'`e'))$($_.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>OutputRendering</PropertyName>
              </ListItem>
              <ListItem>
                <Label>Formatting.FormatAccent</Label>
                <ScriptBlock>"$($_.Formatting.FormatAccent)$($_.Formatting.FormatAccent.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Formatting.TableHeader</Label>
                <ScriptBlock>"$($_.Formatting.TableHeader)$($_.Formatting.TableHeader.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Formatting.ErrorAccent</Label>
                <ScriptBlock>"$($_.Formatting.ErrorAccent)$($_.Formatting.ErrorAccent.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Formatting.Error</Label>
                <ScriptBlock>"$($_.Formatting.Error)$($_.Formatting.Error.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Formatting.Warning</Label>
                <ScriptBlock>"$($_.Formatting.Warning)$($_.Formatting.Warning.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Formatting.Verbose</Label>
                <ScriptBlock>"$($_.Formatting.Verbose)$($_.Formatting.Verbose.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Formatting.Debug</Label>
                <ScriptBlock>"$($_.Formatting.Debug)$($_.Formatting.Debug.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Progress.Style</Label>
                <ScriptBlock>"$($_.Progress.Style)$($_.Progress.Style.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Progress.MaxWidth</Label>
                <ScriptBlock>"$($_.Progress.MaxWidth)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Progress.View</Label>
                <ScriptBlock>"$($_.Progress.View)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Progress.UseOSCIndicator</Label>
                <ScriptBlock>"$($_.Progress.UseOSCIndicator)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>FileInfo.Directory</Label>
                <ScriptBlock>"$($_.FileInfo.Directory)$($_.FileInfo.Directory.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>FileInfo.SymbolicLink</Label>
                <ScriptBlock>"$($_.FileInfo.SymbolicLink)$($_.FileInfo.SymbolicLink.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>FileInfo.Executable</Label>
                <ScriptBlock>"$($_.FileInfo.Executable)$($_.FileInfo.Executable.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>FileInfo.Extension</Label>
                <ScriptBlock>"$([string]::Join(',',$_.FileInfo.Extension.Keys))"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.Black</Label>
                <ScriptBlock>"$($_.Foreground.Black)$($_.Foreground.Black.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightBlack</Label>
                <ScriptBlock>"$($_.Foreground.BrightBlack)$($_.Foreground.BrightBlack.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.White</Label>
                <ScriptBlock>"$($_.Foreground.White)$($_.Foreground.White.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightWhite</Label>
                <ScriptBlock>"$($_.Foreground.BrightWhite)$($_.Foreground.BrightWhite.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.Red</Label>
                <ScriptBlock>"$($_.Foreground.Red)$($_.Foreground.Red.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightRed</Label>
                <ScriptBlock>"$($_.Foreground.BrightRed)$($_.Foreground.BrightRed.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.Magenta</Label>
                <ScriptBlock>"$($_.Foreground.Magenta)$($_.Foreground.Magenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightMagenta</Label>
                <ScriptBlock>"$($_.Foreground.BrightMagenta)$($_.Foreground.BrightMagenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.Blue</Label>
                <ScriptBlock>"$($_.Foreground.Blue)$($_.Foreground.Blue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightBlue</Label>
                <ScriptBlock>"$($_.Foreground.BrightBlue)$($_.Foreground.BrightBlue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.Cyan</Label>
                <ScriptBlock>"$($_.Foreground.Cyan)$($_.Foreground.Cyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightCyan</Label>
                <ScriptBlock>"$($_.Foreground.BrightCyan)$($_.Foreground.BrightCyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.Green</Label>
                <ScriptBlock>"$($_.Foreground.Green)$($_.Foreground.Green.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightGreen</Label>
                <ScriptBlock>"$($_.Foreground.BrightGreen)$($_.Foreground.BrightGreen.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.Yellow</Label>
                <ScriptBlock>"$($_.Foreground.Yellow)$($_.Foreground.Yellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Foreground.BrightYellow</Label>
                <ScriptBlock>"$($_.Foreground.BrightYellow)$($_.Foreground.BrightYellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.Black</Label>
                <ScriptBlock>"$($_.Background.Black)$($_.Background.Black.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightBlack</Label>
                <ScriptBlock>"$($_.Background.BrightBlack)$($_.Background.BrightBlack.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.White</Label>
                <ScriptBlock>"$($_.Background.White)$($_.Background.White.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightWhite</Label>
                <ScriptBlock>"$($_.Background.BrightWhite)$($_.Background.BrightWhite.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.Red</Label>
                <ScriptBlock>"$($_.Background.Red)$($_.Background.Red.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightRed</Label>
                <ScriptBlock>"$($_.Background.BrightRed)$($_.Background.BrightRed.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.Magenta</Label>
                <ScriptBlock>"$($_.Background.Magenta)$($_.Background.Magenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightMagenta</Label>
                <ScriptBlock>"$($_.Background.BrightMagenta)$($_.Background.BrightMagenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.Blue</Label>
                <ScriptBlock>"$($_.Background.Blue)$($_.Background.Blue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightBlue</Label>
                <ScriptBlock>"$($_.Background.BrightBlue)$($_.Background.BrightBlue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.Cyan</Label>
                <ScriptBlock>"$($_.Background.Cyan)$($_.Background.Cyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightCyan</Label>
                <ScriptBlock>"$($_.Background.BrightCyan)$($_.Background.BrightCyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.Green</Label>
                <ScriptBlock>"$($_.Background.Green)$($_.Background.Green.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightGreen</Label>
                <ScriptBlock>"$($_.Background.BrightGreen)$($_.Background.BrightGreen.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.Yellow</Label>
                <ScriptBlock>"$($_.Background.Yellow)$($_.Background.Yellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Background.BrightYellow</Label>
                <ScriptBlock>"$($_.Background.BrightYellow)$($_.Background.BrightYellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSStyle+FormattingData</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSStyle+FormattingData</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>FormatAccent</Label>
                <ScriptBlock>"$($_.FormatAccent)$($_.FormatAccent.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>TableHeader</Label>
                <ScriptBlock>"$($_.TableHeader)$($_.TableHeader.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ErrorAccent</Label>
                <ScriptBlock>"$($_.ErrorAccent)$($_.ErrorAccent.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Error</Label>
                <ScriptBlock>"$($_.Error)$($_.Error.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Warning</Label>
                <ScriptBlock>"$($_.Warning)$($_.Warning.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Verbose</Label>
                <ScriptBlock>"$($_.Verbose)$($_.Verbose.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Debug</Label>
                <ScriptBlock>"$($_.Debug)$($_.Debug.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSStyle+ProgressConfiguration</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSStyle+ProgressConfiguration</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Style</Label>
                <ScriptBlock>"$($_.Style)$($_.Style.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <PropertyName>MaxWidth</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>View</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>UseOSCIndicator</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSStyle+FileInfoFormatting</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSStyle+FileInfoFormatting</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Directory</Label>
                <ScriptBlock>"$($_.Directory)$($_.Directory.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SymbolicLink</Label>
                <ScriptBlock>"$($_.SymbolicLink)$($_.SymbolicLink.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Executable</Label>
                <ScriptBlock>"$($_.Executable)$($_.Executable.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Extension</Label>
                <ScriptBlock>
                            $sb = [System.Text.StringBuilder]::new()
                            $maxKeyLength = 0
                            foreach ($key in $_.Extension.Keys) {
                                if ($key.Length -gt $maxKeyLength) {
                                    $maxKeyLength = $key.Length
                                }
                            }

                            foreach ($key in $_.Extension.Keys) {
                                $null = $sb.Append($key.PadRight($maxKeyLength))
                                $null = $sb.Append(' = "')
                                $null = $sb.Append($_.Extension[$key])
                                $null = $sb.Append($_.Extension[$key].Replace("`e",'`e'))
                                $null = $sb.Append($PSStyle.Reset)
                                $null = $sb.Append('"')
                                $null = $sb.Append([Environment]::NewLine)
                            }

                            $sb.ToString()</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSStyle+ForegroundColor</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSStyle+ForegroundColor</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Black</Label>
                <ScriptBlock>"$($_.Black)$($_.Black.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightBlack</Label>
                <ScriptBlock>"$($_.BrightBlack)$($_.BrightBlack.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>White</Label>
                <ScriptBlock>"$($_.White)$($_.White.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightWhite</Label>
                <ScriptBlock>"$($_.BrightWhite)$($_.BrightWhite.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Red</Label>
                <ScriptBlock>"$($_.Red)$($_.Red.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightRed</Label>
                <ScriptBlock>"$($_.BrightRed)$($_.BrightRed.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Magenta</Label>
                <ScriptBlock>"$($_.Magenta)$($_.Magenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightMagenta</Label>
                <ScriptBlock>"$($_.BrightMagenta)$($_.BrightMagenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Blue</Label>
                <ScriptBlock>"$($_.Blue)$($_.Blue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightBlue</Label>
                <ScriptBlock>"$($_.BrightBlue)$($_.BrightBlue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Cyan</Label>
                <ScriptBlock>"$($_.Cyan)$($_.Cyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightCyan</Label>
                <ScriptBlock>"$($_.BrightCyan)$($_.BrightCyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Green</Label>
                <ScriptBlock>"$($_.Green)$($_.Green.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightGreen</Label>
                <ScriptBlock>"$($_.BrightGreen)$($_.BrightGreen.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Yellow</Label>
                <ScriptBlock>"$($_.Yellow)$($_.Yellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightYellow</Label>
                <ScriptBlock>"$($_.BrightYellow)$($_.BrightYellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSStyle+BackgroundColor</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSStyle+BackgroundColor</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <Label>Black</Label>
                <ScriptBlock>"$($_.Black)$($_.Black.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightBlack</Label>
                <ScriptBlock>"$($_.BrightBlack)$($_.BrightBlack.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>White</Label>
                <ScriptBlock>"$($_.White)$($_.White.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightWhite</Label>
                <ScriptBlock>"$($_.BrightWhite)$($_.BrightWhite.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Red</Label>
                <ScriptBlock>"$($_.Red)$($_.Red.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightRed</Label>
                <ScriptBlock>"$($_.BrightRed)$($_.BrightRed.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Magenta</Label>
                <ScriptBlock>"$($_.Magenta)$($_.Magenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightMagenta</Label>
                <ScriptBlock>"$($_.BrightMagenta)$($_.BrightMagenta.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Blue</Label>
                <ScriptBlock>"$($_.Blue)$($_.Blue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightBlue</Label>
                <ScriptBlock>"$($_.BrightBlue)$($_.BrightBlue.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Cyan</Label>
                <ScriptBlock>"$($_.Cyan)$($_.Cyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightCyan</Label>
                <ScriptBlock>"$($_.BrightCyan)$($_.BrightCyan.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Green</Label>
                <ScriptBlock>"$($_.Green)$($_.Green.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightGreen</Label>
                <ScriptBlock>"$($_.BrightGreen)$($_.BrightGreen.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>Yellow</Label>
                <ScriptBlock>"$($_.Yellow)$($_.Yellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>BrightYellow</Label>
                <ScriptBlock>"$($_.BrightYellow)$($_.BrightYellow.Replace(""`e"",'`e'))$($PSStyle.Reset)"</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSTraceSource</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSTraceSource</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>20</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Options</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Listeners</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>System.Management.Automation.PSTraceSource</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.PSTraceSource</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>Name</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Description</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Options</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Listeners</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Attributes</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>Switch</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>children</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.Internal.TransactedRegistryKey</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>30</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Property</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>PSChildName</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                                  $result = (Get-ItemProperty -LiteralPath $_.PSPath |
                                      Select * -Exclude PSPath,PSParentPath,PSChildName,PSDrive,PsProvider |
                                      Format-List | Out-String | Sort).Trim()
                                  $result = $result.Substring(0, [Math]::Min($result.Length, 5000) )
                                  if($result.Length -eq 5000) { $result += "`u{2026}" }

                                  $result
                                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>PSReadLine-KeyBindings</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.KeyHandler</TypeName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>Group</PropertyName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Key</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Function</Label>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Description</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap />
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Key</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Function</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Description</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>PSReadLine-HistoryItem</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.PSConsoleReadLine+HistoryItem</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>CommandLine</PropertyName>
              </ListItem>
              <ListItem>
                <Label>StartTime</Label>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.StartTime.Ticks -ne 0</ScriptBlock>
                </ItemSelectionCondition>
                <ScriptBlock>$_.StartTime.ToLocalTime()</ScriptBlock>
              </ListItem>
              <ListItem>
                <ItemSelectionCondition>
                  <ScriptBlock>$_.ApproximateElapsedTime.Ticks -ne 0</ScriptBlock>
                </ItemSelectionCondition>
                <PropertyName>ApproximateElapsedTime</PropertyName>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
    <View>
      <Name>PSReadLine-Options</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.PSConsoleReadLineOptions</TypeName>
      </ViewSelectedBy>
      <ListControl>
        <ListEntries>
          <ListEntry>
            <ListItems>
              <ListItem>
                <PropertyName>EditMode</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>AddToHistoryHandler</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistoryNoDuplicates</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySavePath</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySaveStyle</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySearchCaseSensitive</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>HistorySearchCursorMovesToEnd</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MaximumHistoryCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ContinuationPrompt</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ExtraPromptLineCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PromptText</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>BellStyle</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DingDuration</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>DingTone</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandsToValidateScriptBlockArguments</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CommandValidationHandler</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>CompletionQueryItems</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>MaximumKillRingCount</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ShowToolTips</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>ViModeIndicator</PropertyName>
              </ListItem>
              <ListItem>
                <Label>ViModeChangeHandler</Label>
                <ItemSelectionCondition>
                  <ScriptBlock>$null -ne $_.ViModeChangeHandler</ScriptBlock>
                </ItemSelectionCondition>
                <PropertyName>ViModeChangeHandler</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>WordDelimiters</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>AnsiEscapeTimeout</PropertyName>
              </ListItem>
              <ListItem>
                <PropertyName>PredictionSource</PropertyName>
              </ListItem>
              <ListItem>
                <Label>CommandColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommandColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>CommentColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.CommentColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ContinuationPromptColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ContinuationPromptColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>DefaultTokenColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.DefaultTokenColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>EmphasisColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.EmphasisColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ErrorColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ErrorColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>KeywordColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.KeywordColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>MemberColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.MemberColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>NumberColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.NumberColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>OperatorColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.OperatorColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>ParameterColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.ParameterColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>InlinePredictionColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.InlinePredictionColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>SelectionColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.SelectionColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>StringColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.StringColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>TypeColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.TypeColor)</ScriptBlock>
              </ListItem>
              <ListItem>
                <Label>VariableColor</Label>
                <ScriptBlock>[Microsoft.PowerShell.VTColorUtils]::FormatColor($_.VariableColor)</ScriptBlock>
              </ListItem>
            </ListItems>
          </ListEntry>
        </ListEntries>
      </ListControl>
    </View>
  </ViewDefinitions>
</Configuration>